/* Zeit Logelei Nr. 2005/28
https://www.zeit.de/2005/28/Spielen_2fLogelei_28
Bei der Diskussion darüber, wo der nächste Kongress insulanischer logischer Transaktionen (KILT) ausgetragen werden soll, 
gibt es zwei Fraktionen: Die einen sagen:
KILT + LOGIK = MEKKA und die anderen: KILT + LOGIK = KIOTO
Wir werden dem Vorbereitungskommitee seine Entscheidung nicht abnehmen können. Aber wir können die Alphametiken lösen 
und herausfinden, welcher Zahl MEKKA und KIOTO jeweils entsprechen. */
import cp, util.

main =>
    add(["KILT", "LOGIK", "MEKKA"]), /*
  3581
 86753
------
 90334 */
    add(["KILT", "LOGIK", "KIOTO"]). /*
  7561
 68257
------
 75818 */

add(L) => % das letzte Element von L ist die Summe der vorherigen Elemente
   Letter = keys(new_set(flatten(L))), % verwendete Buchstaben
   Digit = new_list(len(Letter)), Digit :: 0..9, % eine Ziffer je Buchstabe
   all_different(Digit),
   Zeilen = len(L) - 1, % Anzahl der Summanden, im Beispiel = 2
   Num = new_array(len(L)), % numerische Repräsentation der Elemente von L
   foreach(I in 1..len(L))
       S = [Digit[find_first_of(Letter, C)] : C in L[I]], % Convert Letter C -> Digit
       to_num(S, Num[I]), S[1] #!= 0
   end,
   sum([Num[I] : I in 1.. Zeilen]) #= Num[len(L)],
   solve(Digit ++ Num),
   foreach(I in 1..Zeilen) printf("%6d%n", Num[I]) end,
   printf("------%n"),
   printf("%6d%n%n", Num[len(L)]).

to_num(List, Num) => 
        Len = length(List),
        Num #= sum([List[I]*10**(Len-I) : I in 1..Len]).
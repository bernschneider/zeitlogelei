% NEUE Logeleien 38
% siehe auch 15_puzzle.pi in Planner examples

import planner.

main =>  % read facts from stdin
    test.

asp(As) =>
    cl_facts(As,[$in0(-,-,+)]),
    Board = [[R|C] : I in 0..15, in0(R,C,I)],
    writeln(Board),
    maxtime(MaxStep),
    best_plan(Board,MaxStep,Plan),
    writeln(Plan).
   

/* the final configuration
    [[ 1,2,3],
     [ 4,5,6],
     [ 7,8,0]] (0 = the empty square)
*/
%                       b     1     2    3      4     5     6     7     8      
final(State) => State=[[3|3],[1|1],[1|2],[1|3],[2|1],[2|2],[2|3],[3|1],[3|2]].

action([P0@[R0|C0]|Board],NextS,Move,Cost) ?=>
    R1 is R0-1,
    R1 >= 1,
    Move=up,
    Cost=1,
    P1 = [R1|C0],
    update(Board,P0,P1,NBoard),
    manhattan_heuristic(NBoard),
    NextS=[P1|NBoard].
action([P0@[R0|C0]|Board],NextS,Move,Cost) ?=>
    R1 is R0+1,
    R1 =< 4,
    Move=down,
    Cost=1,
    P1 = [R1|C0],
    update(Board,P0,P1,NBoard),
    manhattan_heuristic(NBoard),
    NextS=[P1|NBoard].
action([P0@[R0|C0]|Board],NextS,Move,Cost) ?=>
    C1 is C0-1,
    C1 >= 1,
    Move=left,
    Cost=1,
    P1 = [R0|C1],
    update(Board,P0,P1,NBoard),
    manhattan_heuristic(NBoard),
    NextS=[P1|NBoard].
action([P0@[R0|C0]|Board],NextS,Move,Cost) =>
    C1 is C0+1,
    C1 =< 4,
    Move=right,
    Cost=1,
    P1 = [R0|C1],
    update(Board,P0,P1,NBoard),
    manhattan_heuristic(NBoard),
    NextS=[P1|NBoard].

% Move the empty square from P0 to P1,
% this means to move the tile at P1 to P0
update([P1|Tiles],P0,P1,NTiles) =>
    NTiles = [P0|Tiles].
update([Tile|Tiles],P0,P1,NTiles) =>
    NTiles=[Tile|NTiles1],
    update(Tiles,P0,P1,NTiles1).

% the remaining resource (the number of allowed steps) must be greater than the Manhattan distance between the two boards
manhattan_heuristic(NBoard) =>
    final([_|FBoard]),
    manhattan_dist(NBoard,FBoard,0,Dist),
    current_resource() > Dist.   % current_resource, defined in module planner, returns the remaining resource amount

manhattan_dist([],_,Dist0,Dist) => Dist=Dist0.
manhattan_dist([[R1|C1]|Board],[[R2|C2]|NBoard],Dist0,Dist) =>
    manhattan_dist(Board,NBoard,Dist0+abs(R1-R2)+abs(C1-C2),Dist).

% Start: 7 5 6
%		 8 3 2
%		 4   1
test =>
    asp($[maxtime(40),
     in0(1,1,7),   in0(1,2,5),  in0(1,3,6), 
	 in0(2,1,8),   in0(2,2,3),  in0(2,3,2), 
	 in0(3,1,4),   in0(3,2,0),  in0(3,3,1)]).
% Move the empty square ...:
% [right,up,up,left,down,down,right,up,up,left,down,down,left,up,up,right,down,down,left,up,right,right,down]
% 23 Schritte wie in der ZEUIT-Musterl√∂sung. Notation dort: Anrichte, Bett, Couch, ...
/* Zeit Logelei 04/2022
https://www.zeit.de/zeit-magazin/2022/04/logelei */
import cp, util.
main ?=>
    C = {{ 0, 0, 0, 0, 0, 0},
         { 0, 0, 0, 0,84, 0},
         { 0, 0,21, 0, 0, 0},
         { 0, 0, 0, 0, 0,73},
         { 0,83, 0, 0, 0, 0},
         { 0, 0, 0, 0,11, 0}}, N = len(C),
    M = new_array(N,N), M :: 0..3, % Tragen Sie die Zahlen von 1 bis 3 so in die leeren Felder des Diagramms ein, 
    foreach(Lst in M.rows() ++ M.columns()) % .. dass in jeder Zeile und jeder Spalte ..
        sum(Lst) #= 6,                      % .. jede Zahl genau einmal vorkommt (1 + 2 + 3 = 6)
        all_different_except_0(Lst)         % (nicht zwei- oder dreimal wie in 2 + 2 + 2 = 6)
    end,
    foreach(Z in 1..N, S in 1..N, C[Z,S] > 0)       % Die Zahlen bzw. Punkte in den KÃ¤stchen ..
        % .. geben die Summe bzw. Anzahl der Zahlen in den orthogonalen Nachbarfeldern an:
        Nb = [M[Z1,S1] : (Z1,S1) in [(Z-1,S),(Z+1,S),(Z,S-1),(Z,S+1)], 0<Z1, Z1=<N, 0<S1, S1=<N],
        C[Z,S] div 10 #= sum(Nb),                   % Summe der Zahlen in den Nachbarfeldern
        C[Z,S] mod 10 #= sum([(X #> 0) : X in Nb]), % Anzahl der Zahlen in den Nachbarfeldern
        M[Z,S] #= 0 % Zahlen sind nur in den leeren Feldern des Diagramms erlaubt
    end,
    solve(M),
    foreach(Z in 1..N, S in 1..N)
        if      C[Z,S] > 0 then printf("%d*%d|", C[Z,S] div 10, C[Z,S] mod 10) 
        elseif  M[Z,S] > 0 then printf(" %d |",  M[Z,S])
        else                    print( "   |")
        end,
        if S=N then nl end
    end, fail. /*
 3 |   | 1 |   | 2 |   |
   | 1 |   | 3 |8*4| 2 |
   | 2 |2*1|   | 1 | 3 |
 1 |   |   | 2 | 3 |7*3|
 2 |8*3| 3 |   |   | 1 |
   | 3 | 2 | 1 |1*1|   |
CPU time 0.031 seconds, no more solutions, korrekt */
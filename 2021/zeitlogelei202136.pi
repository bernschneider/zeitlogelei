/* Zeit Logelei Nr. 2021/36 Erleuchtung im dreieckiges Zen-Kloster
https://www.zeit.de/zeit-magazin/2021/36/logelei
Für die Erleuchtung benötigt man ganz besonderes Licht. Pete ist hierfür in ein dreieckiges Zen-Kloster gereist. 
Dort soll er die 21 blauen Lampen unterschiedlich hell einstellen: Es gibt die Stufen 1 bis 6. 
Wie wird es Pete gelingen, die Erleuchtung zu erlangen? */
import util, cp.
main ?=> 
    M = {{_,0,0,0,0,0},
         {_,_,0,0,0,0},
         {_,_,_,0,0,0},
         {_,_,_,_,0,0},
         {_,_,_,_,_,0},
         {_,_,_,_,_,_}}, 
    N = len(M), M :: 0..N, % Stufen 1..6 
    foreach(Z in 1..N, S in 1..Z) M[Z,S] #> 0 end, % im Dreieck keine Nullen!
    % Wichtig ist dabei: In einer Reihe darf sich keine der 6 Stufen wiederholen:
    % Reihen:    waagrecht   /-Diagonale    \-Diagonale:
    foreach(L in M.rows() ++ M.columns() ++ [{M[Z,Z-D] : Z in 1+D..N} : D in 0..N-1])
        all_different_except_0(L)
    end,
    % Zudem hat ihm der Mönch in die Skizze des Klosters einige Zahlen eingetragen. 
    % Die Stufen der drei zu einer Zahl benachbarten Lampen sollen sich zu dieser Zahl summieren:
    M[1,1] + M[2,1] + M[2,2] #= 8,
    M[2,1] + M[2,2] + M[3,2] #= 6,
    M[4,2] + M[4,3] + M[5,3] #= 11,
    M[4,3] + M[4,4] + M[5,4] #= 8,
    M[4,1] + M[5,1] + M[5,2] #= 14,
    M[4,2] + M[5,2] + M[5,3] #= 9,
    solve(M),
    foreach(Z in 1..N)
        foreach(_ in 1..N-Z) print(" ") end, % align row for triangle print-out
        foreach(S in 1..Z) printf("%d|", M[Z,S]) end,
        nl
    end, nl, fail. /* 
     4|
    3|1|
   1|2|3|
  6|4|5|2|
 5|3|2|1|6|
2|6|1|3|4|5|
CPU time 0.003 seconds, no more solutions, korrekt */
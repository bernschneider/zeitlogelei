/* Zeit Logelei 2021/16
https://www.zeit.de/zeit-magazin/2021/16/logelei */
import util, cp.
main ?=>
	N = 5, M = new_array(N, N), M :: 1..N,
    foreach(L in M.rows() ++ M.columns()) all_different(L) end,
    foreach([Res, Op | Coord] in 
		 [[9,  +, (1,1), (2,1)],
		  [36, *, (1,2), (2,2), (2,3)],
		  [5,  *, (1,3), (1,4)],
		  [2,  /, (1,5), (2,5)],
		  [40, *, (2,4), (3,4), (3,5)],
		  [2,  -, (3,1), (3,2)],
		  [8,  *, (3,3), (4,3), (4,4)],
		  [10, *, (4,1), (4,2)],
		  [7,  +, (4,5), (5,5)],
		  [3,  +, (5,1), (5,2)],
		  [15, *, (5,3), (5,4)]])
		Coord = [(Z1,S1), (Z2,S2) | _],
        if     Op = + then Res #= sum( [M[Z,S] : (Z,S) in Coord])
		elseif Op = * then Res #= prod([M[Z,S] : (Z,S) in Coord])
		elseif Op = - then Res + M[Z1,S1] #= M[Z2,S2]  #\/ Res + M[Z2,S2] #= M[Z1,S1]
		elseif Op = / then Res * M[Z1,S1] #= M[Z2,S2]  #\/ Res * M[Z2,S2] #= M[Z1,S1]
		end 
	end,
	solve(M), 
    foreach(I in 1..N, J in 1..N)
      	 printf(" %1d", M[I,J]), if J == N then nl end
    end, fail.	/*
 4 3 1 5 2
 5 4 3 2 1
 3 1 2 4 5
 2 5 4 1 3
 1 2 5 3 4
CPU time 0.0 seconds, no more solutions, korrekt */
/* Zeit Logelei 2020/19 (nach Janko Fillomino)
https://www.zeit.de/zeit-magazin/2020/19/spiele-logelei-19 */
import sat. 
main => 
   C = {{0,1,0,0,4,0,0,0,3},
		{0,3,2,0,0,4,0,0,2},
		{0,5,0,0,0,0,3,0,0},
		{0,2,0,5,0,4,0,0,1},
		{0,0,0,5,3,0,0,0,0},
		{3,2,0,0,0,2,4,3,1}}, 
   NZ = len(C), NS = len(C[1]), M = new_array(NZ,NS), 
   foreach(Z in 1..NZ, S in 1..NS, C[Z,S]>0) M[Z,S] mod 10 #= C[Z,S] end,
   MaxSize = 5, % Einerstelle = Größe des Gebiets
   MaxCnt = 5,  % 10er-Stelle unterscheidet gleich große Gebiete.
   Colors = [10*I+F : I in 0..MaxCnt, F in 2..MaxSize], M :: [1|Colors],
   Cnt = new_list(len(Colors)), Cnt :: 0..MaxSize, % Anzahl der 2er, 3er usw.
   % Eine Farbe F > 1 gibt es 0 oder F mod 10 mal:
   foreach({F10,F} in zip(Cnt,Colors))
           F10 #= sum([(M[Z,S]#=F): Z in 1..NZ, S in 1..NS]), F10 #= 0 #\/ F10 #= F mod 10
   end, % (Die Farbe F = 1 gibt es beliebig oft.)
   foreach(Z in 1..NZ, S in 1..NS-1)
        % 1er sind nicht benachbart:
        M[Z,S] #!= 1 #\/ M[Z,S+1] #!= 1,
   		% Zwei verschiedene Gebiete der gleichen Größe dürfen nicht orthogonal benachbart sein:
        (M[Z,S] mod 10 #= M[Z,S+1] mod 10) #=> M[Z,S] #= M[Z,S+1]
   end, 
   foreach(Z in 1..NZ-1, S in 1..NS)
        M[Z,S] #!= 1 #\/ M[Z+1,S] #!= 1,
   	  (M[Z,S] mod 10 #= M[Z+1,S] mod 10) #=> M[Z,S] #= M[Z+1,S]
   end, 
   Root = new_array(NZ,NS), Root :: 0..1,
   foreach(Z1 in 1..NZ, S1 in 1..NS, Z2 in 1..NZ, S2 in 1..NS, (Z1,S1)!=(Z2,S2))
        (M[Z1,S1] #!= 1 #/\ Root[Z1,S1] #= 1 #/\ Root[Z2,S2] #= 1) #=> M[Z1,S1] #!= M[Z2,S2]
   end,
   % Alle Gebiete müssen einen einzigen orthogonal zusammenhängenden Bereich Bereich bilden:
   Dist = new_array(NZ,NS), MaxDist = MaxSize + 1, Dist :: 0..MaxDist,
   foreach(Z in 1..NZ, S in 1..NS)
         Root[Z,S] #= 1 #=> Dist[Z,S] #= 0,
   	  	Root[Z,S] #= 0 #=> Dist[Z,S] #= 1 + min([ Dist[Z1,S1]*(M[Z,S]#=M[Z1,S1])+MaxDist*(M[Z,S]#!=M[Z1,S1])
   	  	 : (Z1,S1) in [(Z-1,S),(Z,S-1),(Z,S+1),(Z+1,S)], Z1 >= 1, Z1 =< NZ, S1 >= 1, S1 =< NS])
   end,
   solve(vars(M) ++ Cnt ++ vars(Dist) ++ vars(Root)), 
   foreach(Z in 1..NZ) 
      foreach(S in 1..NS) 
		   printf("%2d|", M[Z,S] mod 10)
	  end, nl
   end.
/*
 3| 1| 2| 1| 4| 1| 3| 3| 3|
 3| 3| 2| 4| 4| 4| 1| 2| 2|
 1| 5| 5| 1| 3| 1| 3| 3| 3|
 2| 2| 5| 5| 3| 4| 2| 2| 1|
 3| 3| 1| 5| 3| 4| 4| 3| 3|
 3| 2| 2| 1| 2| 2| 4| 3| 1|
CPU time 39.55 seconds 
ZEIT Zeilenweise: 312141333, 332444122, 155131333, 225534221, 331534433, 322122431 korrekt */
/* Zeit Logelei 2010/48 
https://www.zeit.de/2010/48/Spiele-Logelei-48 */
import sat, util.
main ?=>
    R=1, G=2, B=3,  N=6, M = new_array(N,N), M :: [0,R,G,B],
    SichtH = [[R,_,_,B,_,R], [B,_,_,B,G,B]], 
    SichtV = [[R,_,_,R,_,_], [G,B,G,_,_,_]],
                        % Blick von Westen Zeilen 1..6, von Osten Zeilen 6..1:
    foreach( {F,Frev,L} in zip(SichtH[1], SichtH[2].reverse(), M.rows()) 
                        % Blick von Norden Spalten 6..1,  von Süden Spalten 1..6:
                        ++ zip(SichtV[1].reverse(), SichtV[2], M.columns()) )
        erste(F,L), erste(Frev,L.reverse())
    end,
    solve(M), F = [' ','R','G','B'],
    foreach(Z in 1..N, S in 1..N)
		printf("%c|", F[1+M[Z,S]]),
    	if S = N then nl end
    end, fail.
/*
R|G| | |B| |
B| |R|G| | |
G|R|B| | | |
 |B|G| | |R|
 | | |B|R|G|
 | | |R|G|B|
CPU time 0.263 seconds, no more solutions, korrekt */    
erste(F1, L) =>
	all_different_except_0(L), sum(L) #= 6, % alle Farben 1..3 müsssen vorkommen
    N = len(L), I1 :: 1..N-2, element(I1, L, F1),
    foreach(I in 1..N-2) I #< I1 #=> L[I] #= 0 end.    
/* Zeit Logelei 2014/20
https://www.zeit.de/2014/20/spiele-logelei-20 */
import sat, util.
main ?=>
    % Tragen Sie Ziffern von 1 bis 9 in die Felder ein, so dass ..
    N = 6, M = new_array(N,N), Mvars = vars(M), M :: 1..9,
    % .. in jeder Zeile und in jeder Spalte die gleichen sechs Ziffern vorkommen
    Select = new_list(9), Select :: 0..1, sum(Select) #= 6,
    foreach(V in Mvars) element(V, Select, 1) end,
    Rows = M.rows(), Cols = M.columns(),
    % .. und in keiner Zeile oder Spalte eine Ziffer doppelt vorkommt:
    foreach(L in Rows ++ Cols) all_different(L) end, 
    NumRows = new_list(N), NumCols = new_list(N),
    foreach(I in 1..N) to_num(Rows[I], NumRows[I]), to_num(Cols[I], NumCols[I]) end, 
    [Gw,Hw,_Iw,Jw,Kw,_Lw] = NumRows, [As,_Bs,_Cs,_Ds,_Es,Fs] = NumCols,
    Gw + Hw + Jw #= Kw, % G waagerecht plus H waagerecht plus J waagerecht ist gleich K waagerecht
    decreasing_strict(Cols[2]), % Die Ziffern von B senkrecht sind absteigend sortiert
    As mod 11 #= 0, % A senkrecht ist durch 11 teilbar
    foreach(X in NumRows ++ NumCols[1..5]) Fs #< X end, % F senkrecht ist die kleinste aller waagerechten und senkrechten Zahlen
    solve(Mvars),
    foreach(Z in 1..N, S in 1..N)
		printf("%d|", M[Z,S]), if S = N then nl end
    end, fail.
/*
2|9|8|3|4|1|
1|8|3|9|2|4|
8|4|2|1|3|9|
4|3|9|2|1|8|
9|2|1|4|8|3|
3|1|4|8|9|2|
CPU time 16.785 seconds korrekt */
to_num(List, Num) => 
        Len = length(List),
        Num #= sum([List[I]*10**(Len-I) : I in 1..Len]).
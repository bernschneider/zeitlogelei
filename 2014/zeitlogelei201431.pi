/* Zeit Logelei 2014/31 Alphametik Türcode 
ACHTUNG: HIER musst du jede Ziffer durch eine andere Ziffer ersetzen! (siehe Zeilen 18-21 */
import cp, util.

main =>
    add(["156942", "281112", "438054"]). /*
289563
312223
------
601786
CPU time 0.018 seconds korrekt */

add(L) => % das letzte Element von L ist die Summe der vorherigen Elemente
   Letter = keys(new_set(flatten(L))), % verwendete Buchstaben
   Digit = new_list(len(Letter)), Digit :: 0..9, % eine Ziffer je Buchstabe
   all_different(Digit),
   % Du musst jede Ziffer durch eine andere Ziffer ersetzen:
   foreach(C in Letter)
        D = ord(C) - ord('0'), 
        I = find_first_of(Letter, C),
        D #!= Digit[I]
   end,
   Zeilen = len(L) - 1, % Anzahl der Summanden, im Beispiel = 2
   Num = new_array(len(L)), % numerische Repräsentation der Elemente von L
   foreach(I in 1..len(L))
       S = [Digit[find_first_of(Letter, C)] : C in L[I]], % Convert Letter C -> Digit
       to_num(S, Num[I]), S[1] #!= 0
   end,
   sum([Num[I] : I in 1.. Zeilen]) #= Num[len(L)],
   solve(Digit ++ Num), println(Letter),
   foreach(I in 1..Zeilen) printf("%6d%n", Num[I]) end,
   printf("------%n"),
   printf("%6d%n%n", Num[len(L)]).

to_num(List, Num) => 
        Len = length(List),
        Num #= sum([List[I]*10**(Len-I) : I in 1..Len]).
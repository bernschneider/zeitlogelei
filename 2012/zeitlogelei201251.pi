/* Zeit Logelei 2012/51 In Telfebien wurden drei Diebe gefasst */
import cp, util.
main =>
    G=1, W=2, K=3, NameP = ["Gucksel","Wachsel","Klicksel"], % Person
    Kp=1, Ss=2, Sg=3, NameG = ["die Kragenputze","den Strumpfschieber","das Schienenglas"], % geklautes Gut
    foreach(A1 in 0..1, A2 in 0..1, A3 in 0..1, A4 in 0..1) % Antworten auf die ersten vier Fragen
        Wahr = new_list(3), Wahr :: 0..1, sum(Wahr) #= 2, % Zwei sagen die Wahrheit
        Gut = new_list(3), Gut :: 1..3, all_different(Gut), % Wer hat was geklaut?
        foreach((A,P0,P1,G1) in 
              [(A1,G,W,Kp),  % Herr Gucksel, hat Herr Wacksel die Kragenputze geklaut? 
               (A2,W,K,Ss),  % Herr Wacksel, hat Herr Klicksel den Strumpfschieber geklaut? 
               (A3,K,G,Kp),  % Herr Klicksel, hat Herr Gucksel die Kragenputze geklaut? 
               (A4,W,W,Ss)]) % Herr Wacksel, haben Sie den Strumpfschieber geklaut? 
            A #= (Wahr[P0] #= (Gut[P1] #= G1))
        end, % bis hierher gab es mehrere mögliche Lösungen!
        % Wir merken uns jeweils A5:
        A5 #= (Wahr[G] #= (Gut[G] #= Sg)), % Herr Gucksel, haben Sie das Schienenglas geklaut?
        Sols = solve_all([A5] ++ Wahr ++ Gut),
        % Wir wissen, dass der Richter keine unnötigen Fragen stellt, und dass er am Ende alles weiß:
        if len(Sols) > 1, unknown(Sols) then % siehe auch Zeile 41-44
            printf("A1=%s, A2=%s, A3=%s, A4=%s, ", jn(A1), jn(A2), jn(A3), jn(A4)),
            foreach(VA5 in 0..1) % für alle möglichen Antworten auf Frage 5
                Sols5 = [Sol : Sol in Sols, Sol[1]=VA5], % Sol[1] = A5 führt zur Eindeutigkeit!
                if len(Sols5) = 1 then 
                    printf("A5=%s%n", jn(VA5)),
                    foreach(I in 1..3) 
                        printf("%s %s und hat %s geklaut.%n", 
                                    NameP[I],            % Wer
                                    cond(Sols5[1,1+I]=1,"sagt die Wahrheit","lügt"),
                                    NameG[Sols5[1,4+I]]) % und hat was geklaut
                    end
                end
            end, nl
        end
    end.
/* A1=nein, A2=ja, A3=nein, A4=nein, A5=ja
Gucksel sagt die Wahrheit und hat das Schienenglas geklaut.
Wachsel lügt und hat den Strumpfschieber geklaut.
Klicksel sagt die Wahrheit und hat die Kragenputze geklaut.
CPU time 0.003 seconds - korrekt */
unknown(Sols) => % Ich weiß noch nicht einmal, ob einer von Ihnen mit Sicherheit die Wahrheit sagt:
    foreach(I in 2..4) % in Sol[2..4] stehen die Wahrheitswerte der drei Diebe
        sum([Sol[I] : Sol in Sols]) < len(Sols) % diese sind nicht bei jeder Lösung = 1
    end.
jn(X) = cond(X=0,"nein","ja").
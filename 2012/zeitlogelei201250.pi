/* Zeit Logelei 2012/50 (nach Janko Yukari Kara)
https://www.zeit.de/2012/50/Spiele-Logelei-50 */
import sat, util.
main ?=>
    Hcnt = [3,2,3,6,3,_,_,6,2], N = len(Hcnt),
    Vcnt = [4,_,_,_,2,5,6,1,8],
    AE = new_list(4), AE :: 1..N, % Anfang Z|S und Ende Z|S 
    AE[1] * N + AE[2] #< AE[3] * N + AE[4], % Breaking symmetries: Anfang vor Ende
	% Nummeriere die betretenen Felder durch: 
	M = new_array(N,N), M :: 0..N*N, Max :: N*N//3..N*N,
    foreach(S in 1..N, Z in 1..N) M[Z,S] #=< Max end,
    matrix_element(M, AE[1], AE[2], 1), matrix_element(M, AE[3], AE[4], Max),
    foreach(Z in 1..N, S in 1..N)
        (M[Z,S] #> 0 #/\ (Z #!= AE[3] #\/ S #!= AE[4]))
         #=> sum([(M[Z1,S1] #= M[Z,S] + 1) : {Z1,S1} in [{Z,S-1}, {Z,S+1}, {Z-1,S}, {Z+1,S}], 1=<Z1, Z1=<N, 1=<S1, S1=<N]) #= 1
    end,	
	MVars = vars(M), all_different_except_0(MVars),
    % Die Schlange berÃ¼hrt sich nirgendwo selbst:
    foreach(S in 1..N-1, Z in 1..N-1)
        (M[Z,S] #> 0) + (M[Z,S+1] #> 0) + (M[Z+1,S] #> 0) + (M[Z+1,S+1] #> 0) #< 4,
        (M[Z,S] #> 0 #/\ M[Z+1,S+1] #> 0) #=> abs(M[Z+1,S+1]-M[Z,S]) #= 2, % auch nicht diagonal
        (M[Z,S+1] #> 0 #/\ M[Z+1,S] #> 0) #=> abs(M[Z+1,S]-M[Z,S+1]) #= 2
    end,
    foreach({Cnt,L} in zip(Hcnt,M.rows()) ++ zip(Vcnt,M.columns()))
        Cnt #= sum([(L[I] #> 0) : I in 1 ..len(L)])
    end,
    solve([Max] ++ AE ++ MVars),
    foreach(Z in 1..N)
    	foreach(S in 1..N) 
            if M[Z,S]=0 then print("   |") else printf(" %2d|", M[Z,S]) end
        end, nl
    end, fail.
/* 
   |   |   |   |   |   | 26| 27| 28|
   |   |   |   |   |   | 25|   | 29|
   |   |   |   |   | 23| 24|   | 30|
   | 18| 19| 20| 21| 22|   |   | 31|
 16| 17|   |   |   |   |   |   | 32|
 15|   |   |  8|  7|  6|   |   | 33|
 14|   |   |  9|   |  5|  4|   | 34|
 13| 12| 11| 10|   |   |  3|   | 35|
   |   |   |   |   |  1|  2|   |   |
CPU time 138 seconds no more solutions korrekt */